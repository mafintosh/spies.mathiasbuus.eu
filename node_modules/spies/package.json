{
  "name": "spies",
  "version": "0.1.3",
  "dependencies": {},
  "repository": {
    "type": "git",
    "url": "git://github.com/mafintosh/spies"
  },
  "description": "spy on a running program",
  "keywords": [
    "repl",
    "shell",
    "nc"
  ],
  "author": {
    "name": "Mathias Buus Madsen",
    "email": "mathiasbuus@gmail.com"
  },
  "readme": "# spies\n\nSpy on a running node program by having a man on the inside\n\n\tnpm install spies\n\nThe first thing you need is to setup a spy inside your program\n\n``` js\nvar spies = require('spies');\nvar net = require('net');\n\nnet.createServer(function(socket) {\n\tvar spy = spies();\n\n\tspy.on('echo', function() {\n\t\tspy.log(Array.prototype.slice.call(arguments));\n\t});\n\tspy.on('load-avg', function() {\n\t\tspy.log(require('os').loadavg());\n\t});\n\n\tsocket.pipe(spy).pipe(socket);\n}).listen(9999);\n```\n\nAs you can see `spy` is simply a readable and writable stream so you can pipe to any kind of stream transport (like a websocket)\n\nYou can use the `spies.listen` helper if you just want to listen using a tcp server\n\n``` js\nspies.listen(9999, function(spy) {\n\t// attach commands here\n});\n```\n\nAfterwards you can use `netcat` to contact and debrief your spy\n\n\tnc localhost 9999\n\nThis starts a `repl` where you can type in commands\n\n\thelp\n\t$ : help\n\t  : watch\n\t  : echo\n\t  : load-avg\n\n`help` and `watch` are build in commands than print the help and runs the same command every 1 second.\nYou invoke a command simply typing it and pressing `enter` and the result will be pretty printed below.\n\n\tload-avg\n\t$ : 0.30126953125\n\t  : 0.3203125\n\t  : 0.33642578125\n\nTo pass arguments to the commands simply seperate them them by a `space`\n\n\techo hello\n\t$ : hello",
  "readmeFilename": "README.md",
  "_id": "spies@0.1.3",
  "dist": {
    "shasum": "fffbbfb44a1be7997f20ab45e4542cd454f8b73c"
  },
  "_from": "spies@0.1.3"
}
